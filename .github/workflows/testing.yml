name: Testing

on:
  push:
  pull_request:
  workflow_dispatch:
    inputs:
      longTests:
        description: 'Force run long tests'
        required: false
        type: boolean

env:
  ACTIONS: 1
  LONG_TESTS: 0

jobs:
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          cache: 'pip'
          cache-dependency-path: 'doc/requirements.txt'
      - name: Install doc dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools
          python -m pip install --upgrade wheel
          python -m pip install --upgrade -r doc/requirements.txt
      - name: Build docs
        run: |
          cd doc/
          sphinx-build -b html . _build

  tests:
    name: Linux tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ['3.7', '3.9', '3.10']
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
          cache: 'pip'
      - name: Get date
        id: get-date
        run: |
          echo "::set-output name=date::$(/bin/date -u "+%Y%m%d")"
      - name: Get cached database
        uses: actions/cache@v2
        with:
          path: ~/.cache/cve-bin-tool
          key: ${{ runner.os }}-cve-bin-tool-${{ steps.get-date.outputs.date }}
      - name: Install cabextract
        run: sudo apt-get update && sudo apt-get install cabextract
      - name: Install OS dependencies for testing PDF
        run: sudo apt-get install build-essential libpoppler-cpp-dev pkg-config python3-dev
      - name: Install pdftotext and cve-bin-tool
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools
          python -m pip install --upgrade wheel
          python -m pip install --upgrade pdftotext
          python -m pip install --upgrade .
      - name: Try single CLI run of tool
        run: |
          NO_EXIT_CVE_NUM=1 python -m cve_bin_tool.cli test/assets
      - name: Run async tests
        run: >
          pytest -n 4 -v
          --ignore=test/test_cli.py
          --ignore=test/test_cvedb.py
          --ignore=test/test_requirements.py
      - name: Run synchronous tests
        run: >
          pytest -v
          test/test_cli.py
          test/test_cvedb.py

  long_tests:
    name: Long tests on Python 3.8
    runs-on: ubuntu-latest
    timeout-minutes: 45
    env:
      LONG_TESTS: 1
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
          cache: 'pip'
      - name: Get date
        id: get-date
        run: |
          echo "::set-output name=date::$(/bin/date -u "+%Y%m%d")"
      - name: Get cached database
        uses: actions/cache@v2
        with:
          path: ~/.cache/cve-bin-tool
          key: ${{ runner.os }}-cve-bin-tool-${{ steps.get-date.outputs.date }}
      - uses: technote-space/get-diff-action@v6
        if: ${{ github.event.inputs.longTests != 'true' }}
        with:
          PATTERNS: |
            cve_bin_tool/checkers/*.py
            test/condensed-downloads/*
          FILES: |
            cvedb.py
            test_scanner.py
            test_cli.py
            cli.py
          SET_ENV_NAME_COUNT: LONG_TESTS
      - name: Install cabextract
        run: sudo apt-get update && sudo apt-get install cabextract
      - name: Install OS dependencies for testing PDF
        run: sudo apt-get install build-essential libpoppler-cpp-dev pkg-config python3-dev
      - name: Install pdftotext and cve-bin-tool
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools
          python -m pip install --upgrade wheel
          python -m pip install --upgrade pdftotext
          python -m pip install --editable .
      - name: Try single CLI run of tool
        run: |
          NO_EXIT_CVE_NUM=1 python -m cve_bin_tool.cli test/assets -n json -u latest
      - name: Run async tests
        run: >
          pytest --cov --cov-append -n 4 -v
          --ignore=test/test_cli.py
          --ignore=test/test_cvedb.py
          --ignore=test/test_requirements.py
      - name: Run synchronous tests
        run: >
          pytest -v --cov --cov-append --cov-report=xml
          test/test_cli.py
          test/test_cvedb.py
      - name: Upload code coverage to codecov
        uses: codecov/codecov-action@v2
        with:
          files: ./coverage.xml
          flags: longtests
          name: codecov-umbrella
          fail_ci_if_error: false

  windows_tests:
    name: Windows tests
    runs-on: windows-latest
    strategy:
      matrix:
        python: ['3.9', '3.10']
    timeout-minutes: 20
    env:
      NO_EXIT_CVE_NUM: 1
      PYTHONIOENCODING: 'utf8'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
          cache: 'pip'
      - name: Get date
        id: get-date
        run: |
          echo "::set-output name=date::$(get-date -format "yyyyMMdd")"
      - name: Get cached database
        uses: actions/cache@v2
        with:
          path: ~/.cache/cve-bin-tool
          key: ${{ runner.os }}-cve-bin-tool-${{ steps.get-date.outputs.date }}
      - name: Install cve-bin-tool
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools
          python -m pip install --upgrade wheel
          python -m pip install --upgrade .
      - name: Try single CLI run of tool
        run: |
          python -m cve_bin_tool.cli test/assets
      - name: Run async tests
        run: >
          pytest -n 4 -v
          --ignore=test/test_cli.py
          --ignore=test/test_cvedb.py
          --ignore=test/test_requirements.py
          --ignore=test/test_helper_script.py
      - name: Run synchronous tests
        run: >
          pytest -v
          test/test_cli.py
          test/test_cvedb.py
      - name: Cache conda
        uses: actions/cache@v2
        env:
          # Increase to reset cache if requirements.txt file has not changed
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key:
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{
            hashFiles('requirements.txt') }}
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          activate-environment: pdftotext
          use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!
      - name: Install pdftotext and cve-bin-tool
        run: |
          conda install -c conda-forge python=${{ matrix.python }} poppler pdftotext
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools
          python -m pip install --upgrade wheel
          python -m pip install --upgrade .
      - name: Test PDF generation on Windows
        run: pytest test/test_output_engine.py -k test_output_pdf
