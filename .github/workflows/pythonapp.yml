name: cve-bin-tool

on: [push, pull_request]

jobs:
  check:
    name: Black check
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v2
    - uses: jpetrucciani/black-check@master

  tests:
    name: Run tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
         os: [ubuntu-latest]
         python: [3.6, 3.7]
    timeout-minutes: 15
    env:
      ACTIONS: 1
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: try single cli run of tool
      run: |
        python -m cve_bin_tool.cli test/binaries
    - name: Run tests
      run: |
        pip install coverage
        coverage run --append setup.py test
        coverage run --append -m pytest -v test/test_scanner.py test/test_checkers.py
        coverage xml -o py36_cov_report.xml
    - name: upload code coverage to codecov
      uses: codecov/codecov-action@v1
      with:
        file: ./py36_cov_report.xml
        flags: ubuntutests
        name: codecov-umbrella
        fail_ci_if_error: false
    - name: Check files
      run: |
        ls -al ~/.cache/
        ls -al ~/.cache/cvedb

  windows_tests:
    name: Windows tests on python3.8
    runs-on: windows-latest
    timeout-minutes: 15
    env:
      ACTIONS: 1
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install coverage
    - name: try single cli run of tool
      run: |
        python -m cve_bin_tool.cli test/binaries
    - name: Run checker tests
      run: |
        coverage run --append -m pytest -v test/test_checkers.py
      continue-on-error: true
    - name: Run cli tests
      run: |
        coverage run --append -m unittest test.test_cli
      continue-on-error: true
    - name: Run csv2cve tests
      run: |
        coverage run --append -m unittest test.test_csv2cve
    - name: Run cvedb tests
      run: |
        coverage run --append -m unittest test.test_cvedb
    - name: Run output engine tests
      run: |
        coverage run --append -m unittest test.test_output_engine
    - name: Run extract tests
      run: |
        coverage run --append -m unittest test.test_extract
      continue-on-error: true
    - name: Run file tests
      run: |
        coverage run --append -m unittest test.test_file
    - name: Run json tests
      run: |
        coverage run --append -m unittest test.test_json
    - name: Run scanner tests
      run: |
        coverage run --append -m pytest -v test/test_scanner.py
      continue-on-error: true
    - name: Run strings tests
      run: |
        coverage run --append -m unittest test.test_strings
      continue-on-error: true
    - name: Run util tests
      run: |
        coverage run --append -m unittest test.test_util
    - name: Create xml file of coverage report
      run: |
        coverage xml -o win_cov_report.xml
    - name: upload code coverage to codecov
      uses: codecov/codecov-action@v1
      with:
        file: ./win_cov_report.xml
        flags: wintests
        name: codecov-umbrella
        fail_ci_if_error: false

  long_tests:
    name: Long tests on python3.8
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      ACTIONS: 1
      LONG_TESTS: 1
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: try single cli run of tool
      run: |
        python -m cve_bin_tool.cli test/binaries
    - name: Run long tests
      run: |
        pip install coverage
        coverage run --append setup.py test
        coverage run --append -m pytest -v test/test_scanner.py test/test_checkers.py
        coverage xml -o py38_cov_report.xml
    - name: upload code coverage to codecov
      uses: codecov/codecov-action@v1
      with:
        file: ./py38_cov_report.xml
        flags: longtests
        name: codecov-umbrella
        fail_ci_if_error: false

