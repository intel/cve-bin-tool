name: cve-bin-tool

on: [push, pull_request]

jobs:
  check:
    name: Black check
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: jpetrucciani/black-check@master

  tests:
    name: Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python: [3.6, 3.7]
    timeout-minutes: 10
    env:
      ACTIONS: 1
      LONG_TESTS: 0
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: try single cli run of tool
        run: |
          python -m cve_bin_tool.cli test/binaries
      - name: Run parallel test
        run: >
          pytest -n 5 -v
          test/test_json.py
          test/test_scanner.py
          test/test_checkers.py
          test/test_extractor.py
          test/test_file.py
          test/test_strings.py
          test/test_output_engine.py
          test/test_util.py
      - name: Run single threaded test
        run: |
          pytest -v test/test_cli.py test/test_cvedb.py test/test_csv2cve.py
  long_tests:
    name: Long tests on python3.8
    runs-on: ubuntu-latest
    timeout-minutes: 45
    env:
      ACTIONS: 1
      LONG_TESTS: 1
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - uses: technote-space/get-diff-action@v1
        with:
          PREFIX_FILTER: |
            cve_bin_tool/checkers
            cve_bin_tool/cvedb
            test/test_scanner
            test/test_cli
            test/test_json
          SUFFIX_FILTER: .py
          SET_ENV_NAME_COUNT: LONG_TESTS
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: try single cli run of tool
        run: |
          python -m cve_bin_tool.cli test/binaries
      - name: Run parallel test
        run: >
          pytest --cov --cov-append -n 5 -v
          test/test_json.py
          test/test_scanner.py
          test/test_checkers.py
          test/test_extractor.py
          test/test_file.py
          test/test_strings.py
          test/test_output_engine.py
          test/test_util.py
      - name: Run single threaded test
        run: |
          pytest --cov --cov-append -v test/test_cli.py test/test_cvedb.py test/test_csv2cve.py
          coverage xml -o py38_cov_report.xml
      - name: upload code coverage to codecov
        uses: codecov/codecov-action@v1
        with:
          file: ./py38_cov_report.xml
          flags: longtests
          name: codecov-umbrella
          fail_ci_if_error: false

  windows_tests:
    name: Windows py3.8
    runs-on: windows-latest
    timeout-minutes: 10
    env:
      ACTIONS: 1
      LONG_TESTS: 0
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install coverage
      - name: try single cli run of tool
        run: |
          python -m cve_bin_tool.cli -u now test/binaries
      - name: Run parallel test
        run: >
          pytest -n 5 -v
          test/test_json.py
          test/test_scanner.py
          test/test_checkers.py
          test/test_extractor.py
          test/test_file.py
          test/test_strings.py
          test/test_output_engine.py
          test/test_util.py
      - name: Run single threaded test
        run: |
          pytest -v test/test_cli.py test/test_cvedb.py test/test_csv2cve.py
