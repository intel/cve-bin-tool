Data Flow Based Scanner
#######################

Implement multi language support in CVE Bin Tool via introduction of data flows
to handle scanning. We'll then extend via overlays to add functionality such as
shouldi were appropriate.

References:

- shouldi

  - https://intel.github.io/dffml/shouldi.html
  - https://intel.github.io/dffml/examples/shouldi.html
  - https://intel.github.io/dffml/examples/dataflows.html

- Alice/Open Architecture

  - https://github.com/intel/dffml/discussions/1369

.. note::

    Tested against development version of DFFML
    9ddcdfd6f8de743f87d41b74d53fde2c182861c7

Install
*******

Install with extra ``dataflow`` to enable data flow based scanner.


.. code-block:: console

    $ python -m pip install cve-bin-tool[dataflow]

Scan with Data Flow Orchestrator
********************************

Scan files as usual (alice is a shortname for the Open Architecture format).

.. code-block:: console

    $ cve-bin-tool --scanner dataflow .

Scan for Python Dependencies
****************************

Enable scanning of python dependencies. We overlay the ``shoudli`` scanning
flows to have them attempt to scan each directory which we come across while
scanning recursivly.

.. code-block:: console

    $ cve-bin-tool --scanner dataflow --overlays cve_bin_tool.overlays.shouldi:OVERLAY --  .

Output To Open Architecture Format
**********************************

When running the scan we can output to the Open Architecture format (aka Alice).

.. code-block:: console

    $ cve-bin-tool --scanner dataflow --format alice --output-file scan.alice .

Supplement Threat Model with Scan Data
**************************************

When running the scan we can output to the Open Architecture format (aka Alice).

.. code-block:: console

    $ cve-bin-tool --input-file scan.alice --format md --output-file THREATS.md
