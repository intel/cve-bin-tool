import os
import sqlite3

import click

from cve_bin_tool.cvedb import DBNAME, DISK_LOCATION_DEFAULT
from cve_bin_tool.mismatch_loader import run_mismatch_loader

parent_dir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
data_dir = os.path.join(parent_dir, "data")
dbpath = DISK_LOCATION_DEFAULT / DBNAME


@click.group(invoke_without_command=True)
@click.pass_context
def main(ctx):
    if ctx.invoked_subcommand is None:
        ctx.invoke(loader)


@main.command()
@click.argument("purl")
@click.option("--database", "db_file", default=dbpath, help="SQLite DB file location")
def lookup(purl, db_file):
    """
    Looks up the vendor information for a given purl in the mismatch database.

    Args:
        purl (str): The package URL to lookup in the mismatch database.
        db_file (str): The file path to the SQLite database file.

    """
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()

    try:
        cursor.execute("SELECT vendor FROM mismatch WHERE purl = ?", (purl,))
        result = cursor.fetchall()

        if result:
            formatted_result = ", ".join([row[0] for row in result])
            click.echo(formatted_result)
        else:
            click.echo("Error: No data found for the provided purl.")
    except sqlite3.Error as e:
        click.echo(f"Database error: {e}")
    finally:
        conn.close()


@main.command()
@click.option("--dir", "data_dir", default=data_dir, help="Data folder location")
@click.option("--database", "db_file", default=dbpath, help="SQLite DB file location")
@click.pass_context
def loader(ctx, data_dir, db_file):
    """
    Sets up or refreshes the mismatch database using data from the specified directory.

    Args:
        ctx (click.Context): Click context object, automatically passed when using @click.pass_context.
        data_dir (str): The directory containing the data files to be loaded into the mismatch database.
        db_file (str): The file path to the SQLite database file.

    """
    if run_mismatch_loader(data_dir, db_file):
        click.echo("Mismatch database setup completed successfully.")
    else:
        click.echo("Mismatch database setup failed.")


if __name__ == "__main__":
    main()
