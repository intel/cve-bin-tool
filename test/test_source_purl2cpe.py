# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: GPL-3.0-or-later


import os
import shutil
import tempfile
from pathlib import Path
from test.utils import EXTERNAL_SYSTEM

import pytest

from cve_bin_tool.data_sources import purl2cpe_source


class TestSourceOSV:
    @classmethod
    def setup_class(cls):
        cls.purl2cpe = purl2cpe_source.PURL2CPE_Source()
        cls.purl2cpe.cachedir = tempfile.mkdtemp(prefix="cvedb-")
        cls.purl2cpe.purl2cpe_path = str(Path(cls.purl2cpe.cachedir) / "purl2cpe")

    @classmethod
    def teardown_class(cls):
        shutil.rmtree(cls.purl2cpe.cachedir)

    purl2cpe_url = "https://github.com/scanoss/purl2cpe/raw/main/purl2cpe.db.zip"

    @pytest.mark.asyncio
    @pytest.mark.skipif(not EXTERNAL_SYSTEM(), reason="Needs network connection.")
    async def test_fetch_cves(self):

        await self.purl2cpe.fetch_cves()

        p = Path(self.purl2cpe.purl2cpe_path).glob("**/*")
        file = [x.name for x in p if x.is_file()]

        assert file == ["purl2cpe.db"]

        file_path = os.path.join(self.purl2cpe.purl2cpe_path, "purl2cpe.db")
        file_size = os.path.getsize(file_path)

        assert file_size > 300 * 1024 * 1024
