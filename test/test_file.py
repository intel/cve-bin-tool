"""
CVE-bin-tool file tests
"""
import os
import tempfile
import unittest

from cve_bin_tool.file import is_binary

ASSETS_PATH = os.path.join(os.path.abspath(os.path.dirname(__file__)), "assets")


class TestFile(unittest.TestCase):
    """ Tests the CVE Bin Tool file binary checker."""

    def _check_test(self, file_type):
        """Helper function to parse a binary file and check whether
        the given string is in the parsed result"""
        with tempfile.NamedTemporaryFile("w+b", suffix=file_type, delete=False) as f:
            if file_type == "out":
                # write magic signature
                f.write(b"\x7f\x45\x4c\x46\x02\x01\x01\x03\n")
                f.seek(0)
                self.assertTrue(is_binary(f.name))
            else:
                f.write(b"some other data\n")
                f.seek(0)
                self.assertFalse(is_binary(f.name))
        os.remove(f.name)

    def test_binary_out_file(self):
        """file *.out"""
        self._check_test("out")

    def test_source_file(self):
        """file *.c"""
        self._check_test("c")

    def test_single_byte_file(self):
        """file single-byte"""
        self.assertFalse(is_binary(os.path.join(ASSETS_PATH, "single-byte.txt")))

    def test_windows(self):
        """file single-byte"""
        self.assertTrue(is_binary(os.path.join(ASSETS_PATH, "windows.txt")))
