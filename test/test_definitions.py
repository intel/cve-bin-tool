'''
Resource definitions and helper functions for tests.
'''
import shutil
import unittest
import os
# Try python3 dependency, fall back if not available
try:
    from urllib2 import urlopen
except ImportError:
    from urllib.request import urlopen
from cve_bin_tool.NVDAutoUpdate import DISK_LOCATION_DEFAULT

CURL_7_20_0_RPM = 'curl-7.20.0-4.fc13.x86_64.rpm'
VMWARE = 'vmware-1.1.cab'
TMUX = 'tmux_1.8-5_amd64.deb'
CURL_7_20_0_URL = 'https://archives.fedoraproject.org/pub/archive/fedora/linux/releases/13/Everything/x86_64/os/Packages/' + CURL_7_20_0_RPM
VMWARE_CAB = 'https://master.dl.sourceforge.net/project/winpe/VmWare%20Drivers/VmWare%20Drivers%20v1.1/' + VMWARE
TMUX_DEB = 'https://mirrors.cat.pdx.edu/ubuntu/pool/main/t/tmux/' + TMUX

class TempDirTest(unittest.TestCase):
    """ For tests that need a temp directory """

    @classmethod
    def setUpClass(cls):
        """ Set location on disk where test data cache will reside."""
        cls.tempdir = os.path.join(DISK_LOCATION_DEFAULT , 'test')
        if not os.path.exists(cls.tempdir):
            os.makedirs(cls.tempdir)

def download_file(url, target):
    """ helper method to download a file """
    if '.rpm' in target:
       if not os.path.exists(target): 
           download_url(url,target)
    elif '.cab' in target:
       if not os.path.exists(target): 
           download_url(url,target)
    elif '.deb' in target:
       if not os.path.exists(target): 
           download_url(url,target)
          
def download_url(url,target):
    download = urlopen(url)
    target_file = open(target, 'wb')
    #with open(target, 'wb') as target_file:
    target_file.write(download.read())
    download.close()
