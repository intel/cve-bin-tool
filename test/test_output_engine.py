"""
CVE-bin-tool OutputEngine tests
"""
import unittest
import io
import json

from cve_bin_tool.OutputEngine import OutputEngine


class TestOutputEngine(unittest.TestCase):
    """ Test the OutputEngine class functions """

    MOCK_MODULES = {
        "modulename0": {
            "1.0": {"CVE-1234-1234": "MEDIUM", "CVE-1234-9876": "LOW",},
            "2.8.6": {"CVE-1234-1111": "LOW",},
        },
        "modulename1": {"3.2.1.0": {"CVE-1234-5678": "HIGH",}},
    }
    FORMATTED_MODULES = {
        "modulename0": {
            "1.0": [
                {"cve": "CVE-1234-1234", "severity": "MEDIUM"},
                {"cve": "CVE-1234-9876", "severity": "LOW"},
            ],
            "2.8.6": [{"cve": "CVE-1234-1111", "severity": "LOW"},],
        },
        "modulename1": {"3.2.1.0": [{"cve": "CVE-1234-5678", "severity": "HIGH"},]},
    }

    def test_formatted_modules(self):
        """ Test reformatting modules """
        output_engine = OutputEngine(modules=self.MOCK_MODULES)
        self.assertEqual(output_engine.formatted_modules(), self.FORMATTED_MODULES)

    def test_output_json(self):
        """ Test formatting output as JSON """
        output_engine = OutputEngine(modules=self.MOCK_MODULES)
        mock_file = io.StringIO()
        output_engine.output_json(mock_file)
        mock_file.seek(0)  # reset file position
        self.assertEqual(json.load(mock_file), self.FORMATTED_MODULES)
