# Copyright (C) 2021 Intel Corporation
# SPDX-License-Identifier: GPL-3.0-or-later

"""
Condensed Downloads Test
"""
import importlib
import os
import pytest
import subprocess
import re
from test.test_data import __all__ as all_test_name

# Test to check condensed files are present in the directory according to the package test data of checkers
def test_condensed_downloads_present_in_directory():
    test_data = list(
        map(lambda x: importlib.import_module(f"test.test_data.{x}"), all_test_name)
    )

    package_names = []
    package_test_datas = map(lambda x: x.package_test_data, test_data)
    for package_test_data in package_test_datas:
        for package_data in package_test_data:
            package_names.append(package_data["package_name"] + ".tar.gz")

    condensed_downloads = os.listdir("test/condensed-downloads")

    assert all(item in condensed_downloads for item in package_names)


# Test to check if condensed file is commited after creating a checker
def test_condensed_downloads_tracked():
    out = subprocess.run("git log", shell=True, stdout=subprocess.PIPE)
    latest_commit_hash = str(out.stdout)[9:49]

    file_out = subprocess.run(
        "git diff-tree --no-commit-id --name-only -r {}".format(latest_commit_hash),
        shell=True,
        stdout=subprocess.PIPE,
    )
    output = str(file_out.stdout)[2:-1]

    # Check if the commit is adding a new Checker else test passes
    if re.search(r"\\ncve_bin_tool\/checkers\/.+?\.py", output):
        assert re.search(r"\\ntest\/condensed-downloads\/.*?\.tar.gz", output)
    else:
        assert True
