#!/usr/bin/python3

 """
CVE checker for subversion
 References:
https://subversion.apache.org/security/
https://www.cvedetails.com/vulnerability-list/vendor_id-2120/product_id-3608/Subversion-Subversion.html
 RSS feed: https://www.cvedetails.com/vulnerability-feed.php?vendor_id=2120&product_id=3608&version_id=0&orderby=3&cvssscoremin=0
"""
import re

 def guess_subversion_version_from_content(lines):
    """Guesses the subversion version from the file contents
    """
    new_guess = ""
    pattern1 = re.compile(r"subversion-([0-9]+\.[0-9]+\.[0-9]+)")

     for line in lines:
        match = pattern1.search(line)
        if match:
            new_guess2 = match.group(1).strip()
            if len(new_guess2) > len(new_guess):
                new_guess = new_guess2

     return new_guess

 def guess_contains_subversion(lines):
    """Tries to determine if a file includes subversion
    """
    for line in lines:
        if "subversion-version" in line:
            return 1
        if "svn_io_file_seek" in line:
            return 1
        if "libc.so.6" in line:
            return 1
    return 0

 def get_version(lines, filename):
    """returns version information for subversion as found in a given file.
    The version info is returned as a tuple:
        [modulename, is_or_contains, version]
     modulename will be subversion if subversion is found (and blank otherwise)
    is_or_contains idicates if the file is a copy of subversion or contains one
    version gives the actual version number
     VPkg: subversion
    """
    version_info = dict()
    if "subversion.so." in filename:
        version_info["is_or_contains"] = "is"
    elif guess_contains_subversion(lines):
        version_info["is_or_contains"] = "contains"

     if "is_or_contains" in version_info:
        version_info["modulename"] = "subversion"
        version_info["version"] = guess_subversion_version_from_content(lines)

     return version_info
